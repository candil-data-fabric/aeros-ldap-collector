apiVersion: apps/v1
kind: Deployment
metadata:
  name: rdf2ngsild-ld
  labels:
    name: {{ .Values.rdf2ngsild.label.name }}
spec:
  replicas: 1
  selector:
    matchLabels: 
      name: {{ .Values.rdf2ngsild.label.name }}
  strategy:
    type: RollingUpdate
  template:
    metadata:
      name: {{ .Values.rdf2ngsild.label.name }}
      labels:
        name: {{ .Values.rdf2ngsild.label.name }}
    spec:
      restartPolicy: Always
      hostname: rdf2ngsild-ld
      containers:
        - name: rdf2ngsild-ld
          image: {{ .Values.rdf2ngsild.image }}
          volumeMounts:
          - mountPath: /opt/aeros/rdf-to-ngsild/config.cfg
            name: config-volume
      volumes:
      - name: config-volume
        configMap:
          name: config-cfg

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-cfg
data:
  config.cfg: |
    # Default configurations
    [default]
    ## A list for the context - Just formatted like an array. This is to set the default context
    context = ["https://fiware.github.io/data-models/context.jsonld"]
    
    ##           "https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld"]
    
    # Transformations to URN
    [urn-transform]
    ## urn = std_urn_name - If this is the value, the id of the enties will be calculated from
    ##                      the URI value of RDF's file, something similar to this: 
    ##                      id = urn:xxx:typeentity:identity
    ## Any other value will not transform anything
    urn = std_urn_name_no
    
    [type-transform]
    ## urn = std_type_name - If this is the value, the type will be calculated removing anything
    ##                       before the last ":" character. It can be other things and the name
    ##                       will be left as URI.
    ## urn = std_default_type - Sets default value according to parameter default_type_value
    ##
    ## urn = std_type_default
    urn = std_type_default
    
    retype_function = std_name_only
    default_type_value = rdfs:resource
    
    [encode-transform]
    # Encode or not encode the ID of the of the entity (used mainly for patches) -- If we use a 
    # URL as ID for the entity in Orion-ld, we need to encode it in order to put the ID in
    # the URL as a paramter for the query.
    #
    # If the encoder here is as shown, then the encoder will encode the ID
    # encoder = encode_url_as_http    
    #
    # If we don't need to encode, we can use (this is the default behaviour):
    # encoder = encode_url_not
    #
    encoder = encode_url_as_http
    
    [kafka-client]
    ## Cofiguration for de Kafka reader. It will connect to a topic in a server
    servers = {{ .Values.rdf2ngsild.configmap.kafkaURL }}
    topic = rdf-topic
    
    # Timeout of reader. -1 means infinite.
    reader_timeout = -1
    
    [brokerld]
    ### NGSI-LD Broker basic URL to connect to when data is sent to NGSI-LD Broker.
    url = {{ .Values.rdf2ngsild.configmap.ldbroker }}
    pool_size = 1
